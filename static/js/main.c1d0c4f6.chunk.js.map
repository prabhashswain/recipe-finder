{"version":3,"sources":["Component/Header.js","Component/RecipeComponet.js","Component/Recipe.js","App.js","index.js"],"names":["Header","styled","div","AppNameComponent","SearchComponent","RecipeImage","img","SearchInput","input","SearchIcon","RecipeListContainer","RecipeContainer","CoverImage","RecipeName","span","SeeMoreText","IngredientsText","SeeNewTab","Recipe","recipe","useState","show","setShow","label","image","ingredients","url","Dialog","open","DialogTitle","id","DialogContent","map","ingredient","index","className","text","weight","DialogActions","onClick","window","src","Container","Placeholder","App","timeoutId","updateTimerId","recipes","setRecipe","fetchData","q","a","axios","get","response","data","hits","type","placeholder","onChange","e","clearTimeout","timerId","setTimeout","target","value","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,EAASC,IAAOC,IAAV,6RAYNC,EAAmBF,IAAOC,IAAV,mGAMhBE,EAAkBH,IAAOC,IAAV,yLAUfG,EAAcJ,IAAOK,IAAV,8EAKXC,EAAcN,IAAOO,MAAV,gJAQXC,EAAaR,IAAOK,IAAV,6DCzCVI,EAAsBT,IAAOC,IAAV,4JAQnBS,EAAkBV,IAAOC,IAAV,8IAOfU,EAAaX,IAAOK,IAAV,0EAIVO,EAAaZ,IAAOa,KAAV,kLASVC,EAAcd,IAAOa,KAAV,0LASXE,EAAkBf,YAAOc,EAAPd,CAAH,iGAKfgB,EAAYhB,YAAOc,EAAPd,CAAH,yE,2CCWPiB,EAhDA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,EAAyBC,oBAAS,GAAlC,mBAAQC,EAAR,KAAaC,EAAb,KACQC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,MAAOC,EAAqBN,EAArBM,YAAaC,EAAQP,EAARO,IACjC,OACE,qCACA,eAACC,EAAA,EAAD,CAAQC,KAAMP,EAAd,UACA,cAACQ,EAAA,EAAD,CAAaC,GAAG,2BAAhB,yBACA,eAACC,EAAA,EAAD,WACE,cAAClB,EAAD,UAAaU,IACb,kCACI,kCACE,4CACA,2CAEF,gCACGE,EAAYO,KAAI,SAACC,EAAYC,GAAb,OACf,qBAAgBC,UAAU,kBAA1B,UACE,6BAAKF,EAAWG,OAChB,6BAAKH,EAAWI,WAFTH,cAQnB,eAACI,EAAA,EAAD,WACA,cAACrB,EAAD,CAAWsB,QAAS,kBAAMC,OAAOZ,KAAKF,IAAtC,sBACI,cAACX,EAAD,CAAawB,QAAS,kBAAMjB,EAAQ,KAApC,yBAIF,eAACX,EAAD,WACE,cAACC,EAAD,CAAY6B,IAAKjB,IACjB,cAACX,EAAD,UAAaU,IACb,cAACP,EAAD,CACAuB,QAAS,kBAAIjB,GAAQ,IADrB,yBAKA,cAACP,EAAD,CACAwB,QAAW,kBAAIC,OAAOZ,KAAKF,IAD3B,wC,iBCnCJgB,EAAYzC,IAAOC,IAAV,+EAITyC,EAAc1C,IAAOK,IAAV,kGAkDFsC,MA3Cf,WAEE,MAAmCxB,qBAAnC,mBAAQyB,EAAR,KAAkBC,EAAlB,KACA,EAA8B1B,qBAA9B,mBAAQ2B,EAAR,KAAgBC,EAAhB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACR,KAAJD,EADY,gCAESE,IAAMC,IAAN,0CAA6CH,EAA7C,mBArBX,WAqBW,oBApBP,qCAkBF,OAERI,EAFQ,OAGdN,EAAUM,EAASC,KAAKC,MAHV,2CAAH,sDAYf,OACE,eAACd,EAAD,WACE,eAAC1C,EAAD,WACE,eAACG,EAAD,WAAkB,cAACE,EAAD,CAAaoC,IAAI,iCAAnC,oBACA,eAACrC,EAAD,WACE,cAACK,EAAD,CAAYgC,IAAI,mCAChB,cAAClC,EAAD,CAAakD,KAAK,OAAOC,YAAY,gBACrCC,SAZa,SAACC,GACpBC,aAAahB,GACb,IAAMiB,EAAUC,YAAW,kBAAKd,EAAUW,EAAEI,OAAOC,SAAO,KAC1DnB,EAAcgB,YAcZ,cAACpD,EAAD,WACQ,OAAPqC,QAAO,IAAPA,OAAA,EAAAA,EAASmB,QACNnB,EAAQf,KAAI,SAACb,EAAQe,GAAT,OACV,cAAC,EAAD,CAAoBf,OAAQA,EAAOA,QAAtBe,MAGf,cAACS,EAAD,CAAaF,IAAI,uC,MCnD3B0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1d0c4f6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.div`\n    color:white;\n    background-color:black;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 15px;\n    font-size: 25px;\n    font-weight: bold;\n    box-shadow: 0 3px 6px 0 #555;\n`\nexport const AppNameComponent = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n   \n`;\nexport const SearchComponent = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n  \n`;\nexport const RecipeImage = styled.img`\n  width: 36px;\n  height: 36px;\n  margin: 15px;\n`;\nexport const SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\nexport const SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const RecipeListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 20px;\n  justify-content: space-evenly;\n`;\nexport const RecipeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 300px;\n  box-shadow: 0 3px 10px 0 #aaa;\n`;\nexport const CoverImage = styled.img`\n  /* object-fit: cover; */\n  height: 200px;\n`;\nexport const RecipeName = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  margin: 10px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const SeeMoreText = styled.span`\n  color: #eb3300;\n  font-size: 18px;\n  text-align: center;\n  border: solid 1px #eb3300;\n  border-radius: 3px;\n  padding: 10px 15px;\n  cursor: pointer;\n`;\nexport const IngredientsText = styled(SeeMoreText)`\n  color: green;\n  border: solid 1px green;\n  margin-bottom: 12px;\n`;\nexport const SeeNewTab = styled(SeeMoreText)`\n  color: green;\n  border: solid 1px green;\n`;","import React, { useState } from 'react'\nimport { RecipeContainer,RecipeName,CoverImage,SeeNewTab,SeeMoreText,IngredientsText } from './RecipeComponet';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst Recipe = ({ recipe }) => {\n  const [ show,setShow ] = useState(false);\n  const { label, image, ingredients, url } = recipe;\n    return (\n      <>\n      <Dialog open={show}>\n      <DialogTitle id=\"alert-dialog-slide-title\">Ingredients</DialogTitle>\n      <DialogContent>\n        <RecipeName>{label}</RecipeName>\n        <table>\n            <thead>\n              <th>Ingredient</th>\n              <th>Weight</th>\n            </thead>\n            <tbody>\n              {ingredients.map((ingredient, index) => (\n                <tr key={index} className=\"ingredient-list\">\n                  <td>{ingredient.text}</td>\n                  <td>{ingredient.weight}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n      </DialogContent>\n      <DialogActions>\n      <SeeNewTab onClick={() => window.open(url)}>See More</SeeNewTab>\n          <SeeMoreText onClick={() => setShow(\"\")}>Close</SeeMoreText>\n      </DialogActions>\n      </Dialog>\n\n        <RecipeContainer>\n          <CoverImage src={image} />\n          <RecipeName>{label}</RecipeName>\n          <IngredientsText\n          onClick={()=>setShow(true)}\n          >\n            Ingredients\n          </IngredientsText>\n          <SeeMoreText\n          onClick = {()=>window.open(url)}\n          >\n            See Complete Recipe\n          </SeeMoreText>\n        </RecipeContainer>\n        </>\n    )\n}\n\nexport default Recipe;\n","import styled from 'styled-components'\nimport React,{ useState } from 'react'\nimport { Header, AppNameComponent, RecipeImage, SearchComponent, SearchIcon, SearchInput } from './Component/Header'\nimport Recipe from './Component/Recipe';\nimport { RecipeListContainer } from './Component/RecipeComponet';\nimport axios from 'axios';\n\nconst Client_id = \"9d86a823\"\nconst Client_secret = \"af52e57b177b77f50ca37f6f64496bcd\"\n\nconst Container = styled.div`\n     display: flex;\n     flex-direction: column;\n`;\nconst Placeholder = styled.img`\n  width: 120px;\n  height: 120px;\n  margin: 200px;\n  opacity: 50%;\n`;\n\nfunction App() {\n\n  const [ timeoutId,updateTimerId] = useState();\n  const [ recipes,setRecipe ] = useState();\n\n  const fetchData = async (q)=>{\n    if (q!==\"\") {\n      const response = await axios.get(`https://api.edamam.com/search?q=${q}&app_id=${Client_id}&app_key=${Client_secret}`);\n      setRecipe(response.data.hits)\n    }\n  }\n\n  const onTextChange = (e)=>{\n    clearTimeout(timeoutId);\n    const timerId = setTimeout(()=> fetchData(e.target.value),500 );\n    updateTimerId(timerId)\n  }\n  return (\n    <Container>\n      <Header>\n        <AppNameComponent><RecipeImage src=\"/recipe-finder/hamburger.svg\" /> Recipe Finder</AppNameComponent>\n        <SearchComponent>\n          <SearchIcon src=\"/recipe-finder/search-icon.svg\" />\n          <SearchInput type=\"text\" placeholder=\"Search Recipe\"\n          onChange={onTextChange}\n          />\n        </SearchComponent>\n      </Header>\n\n      <RecipeListContainer>\n      {recipes?.length ? (\n          recipes.map((recipe, index) => (\n            <Recipe key={index} recipe={recipe.recipe} />\n          ))\n        ) : (\n          <Placeholder src=\"/recipe-finder/hamburger.svg\" />\n        )}\n\n      </RecipeListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}